# Common settings for building firmware
[common_env_data]
build_flags = 
  -D MOTION_WRITE_HZ=10000
  -D REPORT_PD_MILLIS=5000
  -D STEP_INTERPOLATION_TICK_PD=50
	-D NUM_J="${sysenv.NUM_J}"
  -D STEPS_PER_REV="${sysenv.STEPS_PER_REV}"
  -D ENCODER_TICKS_PER_REV="${sysenv.ENCODER_TICKS_PER_REV}"
# ---------------------------- microcontroller (robot) environments ---------------------------

[micro_base]
framework = arduino
build_flags = 
	!python3 -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/micro')]))"
  ${common_env_data.build_flags}
src_filter = 
	+<*>
	+<../hal/micro>
lib_deps = paulstoffregen/Encoder@^1.4.1

[env:3dof]
extends = micro_base
platform = atmelavr
board = uno
build_flags = 
  ${micro_base.build_flags}
	-D NUM_J=3
  -D GSHIELD=1

[env:6dof]
extends = micro_base
platform = teensy
board = teensy35
build_flags = 
  ${micro_base.build_flags}
  -llibc -lc
	-D NUM_J=6
  -D AR3=1

# ----------------------------- native (linux) environments ----------------------------

[env:native]
src_filter = 
	+<*>
	+<../hal/native>
lib_deps = paulstoffregen/Encoder@^1.4.1
platform = native@^1.1.3
build_flags = 
	!python3 -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/native')]))"
  ${common_env_data.build_flags}
  -g
	-D NATIVE=1
	-D LOG_LEVEL=DEBUG_LEVEL
	-lzmq
  -lpthread
